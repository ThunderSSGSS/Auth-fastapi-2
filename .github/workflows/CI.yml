# This workflow will test, create docker images and push to dockerhub
name: CI

on:
  push:
    branches: ["master"]
    paths: ["src/**"]
  pull_request:
    branches: ["master"]
    types: [closed]
    paths: ["src/**"]

env:
  RELEASE_VERSION: v0.4.0
  AUTH-SERVER-REPO: thunderssgss/auth-server
  DB-WORKER-REPO: thunderssgss/db-worker
  EMAIL-WORKER-REPO: thunderssgss/email-worker

jobs:
  CI:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    environment: 
      name: deploy_docker_hub

    steps:
      - uses: actions/checkout@v3
      - name: Build base images
        run: cd cmd && chmod +x init.sh && ./init.sh && cd ..

      - name: Build auth-server, email-worker and db-worker docker images
        run: |
          cd src/auth-server && docker build . -t ${{ env.AUTH-SERVER-REPO }}:${{ env.RELEASE_VERSION }}
          cd ../db-worker && docker build . -t ${{ env.DB-WORKER-REPO }}:${{ env.RELEASE_VERSION }}
          cd ../email-worker && docker build . -t ${{ env.EMAIL-WORKER-REPO }}:${{ env.RELEASE_VERSION }}

      - name: Testing
        run: |
          docker run \
          --env TEST_MODE=YES \
          --env PRIVATE_KEY=17559258d3ac145d717dcafea3277fe82a3cb5d5bad01296925bdd9a2e0c3370 \
          --env SECRET_KEY=a86a57ed41d9720bd481594917da2bca \
          ${{ env.AUTH-SERVER-REPO }}:${{ env.RELEASE_VERSION }} pytest tests

      - name: Push images to docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASS }}
          docker push ${{ env.AUTH-SERVER-REPO }}:${{ env.RELEASE_VERSION }}
          docker push ${{ env.DB-WORKER-REPO }}:${{ env.RELEASE_VERSION }}
          docker push ${{ env.EMAIL-WORKER-REPO }}:${{ env.RELEASE_VERSION }}